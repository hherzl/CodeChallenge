<?xml version="1.0"?>
<doc>
    <assembly>
        <name>API</name>
    </assembly>
    <members>
        <member name="M:API.Controllers.SalesController.PostOrderAsync(API.Models.PlaceOrderRequest)">
            <summary>
            Places a new order
            </summary>
            <param name="request">Order request</param>
            <returns>A response as result of place new order</returns>
            <response code="200">If creation of order it was succes</response>
            <response code="400">For bad request</response>
            <response code="401">For unauthorized clients</response>
            <response code="403">If client doesn't have rights to place order</response>
            <response code="500">If there was an error</response>
        </member>
        <member name="M:API.Controllers.WarehouseController.GetProductsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Gets the products from store
            </summary>
            <param name="pageSize">Page size</param>
            <param name="pageNumber">Page number</param>
            <param name="name">Product name</param>
            <param name="sortBy">Sort by popularity</param>
            <returns>A list of product according to criteria</returns>
            <response code="200">A success response with products list</response>
            <response code="204">If there are not products</response>
            <response code="500">If there was an error</response>
        </member>
        <member name="M:API.Controllers.WarehouseController.AddProductAsync(API.Models.AddProductRequest)">
            <summary>
            Adds a new product
            </summary>
            <param name="request">Request for add product</param>
            <returns>A single response with new product info</returns>
            <response code="200">Returns the newly created product</response>
            <response code="400">For bad request</response>
            <response code="401">For unauthorized clients</response>
            <response code="403">If client doesn't have rights to add product</response>
            <response code="500">If there was an error</response>
        </member>
        <member name="M:API.Controllers.WarehouseController.UpdateProductPriceAsync(System.Int32,API.Models.UpdateProductPriceRequest)">
            <summary>
            Updates the price for existing product
            </summary>
            <param name="id">Product ID</param>
            <param name="request">Request for update product price</param>
            <returns>A response as result of update product price</returns>
            <response code="200">If product price update it was success</response>
            <response code="400">For bad request</response>
            <response code="401">For unauthorized clients</response>
            <response code="403">If client doesn't have rights to update product price</response>
            <response code="404">If product not exists</response>
            <response code="500">If there was an error</response>
        </member>
        <member name="M:API.Controllers.WarehouseController.LikeProductAsync(System.Int32)">
            <summary>
            Likes an existing product
            </summary>
            <param name="id">Product ID</param>
            <returns>A single response as result of like product</returns>
            <response code="200">If like for product it was success</response>
            <response code="401">For unauthorized clients</response>
            <response code="403">If client doesn't have rights to like product</response>
            <response code="404">If product not exists</response>
            <response code="500">If there was an error</response>
        </member>
        <member name="M:API.Controllers.WarehouseController.DeleteProductAsync(System.Int32)">
            <summary>
            Deletes an existing product
            </summary>
            <param name="id">Product ID</param>
            <returns>A response as result of delete product</returns>
            <response code="200">If deleting product it was success</response>
            <response code="401">For unauthorized clients</response>
            <response code="403">If client doesn't have rights to delete product</response>
            <response code="404">If product not exists</response>
            <response code="500">If there was an error</response>
        </member>
    </members>
</doc>
